pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        WAS_HOST = '223.130.146.69'
        WAS_USER = 'root'
        IMAGE_NAME = 'cm-basic-frontend'
    }

    stages {
        stage('Checkout') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_PASS')]) {
                    sh """
                        if [ -d "CareMinder-PC" ]; then
                            rm -rf CareMinder-PC
                        fi
                        git clone -b release/staging https://${GITHUB_USER}:${GITHUB_PASS}@github.com/CareMinder-Basic/CareMinder-PC.git
                        cd CareMinder-PC
                        pwd  # ÌòÑÏû¨ Í≤ΩÎ°ú Ï∂úÎ†•
                        ls -al  # ÌååÏùº Î™©Î°ù Ï∂úÎ†•
                    """
                }
            }
        }
        stage("Load Environment Variables"){
                steps {
                    sh """
                        echo "üîç ÌòÑÏû¨ Jenkins ÏûëÏóÖ ÎîîÎ†âÌÜ†Î¶¨:"
                        pwd  # ÌòÑÏû¨ Í≤ΩÎ°ú Ï∂úÎ†•
                        
                        if [ ! -d "CareMinder-PC" ]; then
                        echo "‚ùå CareMinder-PC ÎîîÎ†âÌÜ†Î¶¨Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§!"
                        exit 1
                        fi
                        
                        echo "VITE_SEVER_URL=https://careflow.co.kr/api" > CareMinder-PC/.env
                        echo "VITE_SW_SEVER_URL=https://careflow.co.kr/ws" >> CareMinder-PC/.env
                        echo "NODE_ENV=production" >> CareMinder-PC/.env
                        cat CareMinder-PC/.env
                    """
                }
        }
        stage('Build Docker Image') {
            steps {
                sh """
                    cd CareMinder-PC
                    docker build --rm -t ${env.IMAGE_NAME}:latest .
                    docker image prune -f  # Ï§ëÍ∞Ñ Ïù¥ÎØ∏ÏßÄ Ï†ïÎ¶¨
                """
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                sh """
                    echo ${env.DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${env.DOCKERHUB_CREDENTIALS_USR} --password-stdin
                    docker tag ${env.IMAGE_NAME}:latest ${env.DOCKERHUB_CREDENTIALS_USR}/${env.IMAGE_NAME}:latest
                    docker push ${env.DOCKERHUB_CREDENTIALS_USR}/${env.IMAGE_NAME}:latest
                    docker image prune -f  # ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÎäî Ïù¥ÎØ∏ÏßÄ Ï†ïÎ¶¨
                """
            }
        }
        stage('Deploy to NCP Server') {
            steps {
                withCredentials([string(credentialsId: 'server-password', variable: 'WAS_PASS')]) {
                    sh """
                        sshpass -p "${WAS_PASS}" ssh -o StrictHostKeyChecking=no ${env.WAS_USER}@${env.WAS_HOST} '
                            echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin;
                            
                            # Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑàÎ•º Í∞ïÏ†ú Ï¢ÖÎ£å Î∞è ÏÇ≠Ï†ú
                            docker rm -f \$(docker ps -aq --filter name=cm-basic-frontend) || true;

                            # ÏµúÏã† Ïù¥ÎØ∏ÏßÄÎ•º Í∞ÄÏ†∏Ïò§Í≥† ÏÉà Ïª®ÌÖåÏù¥ÎÑà Ïã§Ìñâ
                            docker pull ${DOCKERHUB_CREDENTIALS_USR}/cm-basic-frontend:latest;
                            docker run -d -p 5050:5050 --name cm-basic-frontend --add-host host.docker.internal:host-gateway ${DOCKERHUB_CREDENTIALS_USR}/cm-basic-frontend:latest;
                            docker image prune -f;
                        '
                    """
                }
            }
}
    }
    
}
